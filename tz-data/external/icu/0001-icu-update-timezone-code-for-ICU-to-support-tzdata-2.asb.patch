From 1d8c06303690417043e53b3a98aa661dc2ee8193 Mon Sep 17 00:00:00 2001
From: Basil Gello <vasek.gello@gmail.com>
Date: Fri, 11 May 2018 18:22:31 +0300
Subject: [PATCH 1/7] icu: update timezone code for ICU to support tzdata >=
 2017c

Change-Id: I1ee66c9b81d982268cf1ad4cc945c2663562daf6
---
 icu4c/source/tools/tzcode/Makefile.in      | 10 ++-
 icu4c/source/tools/tzcode/icuzdump.cpp     | 10 ++-
 icu4c/source/tools/tzcode/icuzdump.vcxproj |  5 +-
 icu4c/source/tools/tzcode/readme.txt       |  2 +
 icu4c/source/tools/tzcode/tz2icu.cpp       | 98 ++++++++++++++++++++++++++----
 icu4c/source/tools/tzcode/tz2icu.h         |  2 +
 icu4c/source/tools/tzcode/zdump.c          | 10 +--
 7 files changed, 112 insertions(+), 25 deletions(-)

diff --git a/icu4c/source/tools/tzcode/Makefile.in b/icu4c/source/tools/tzcode/Makefile.in
index b6ec447..63c9230 100644
--- a/icu4c/source/tools/tzcode/Makefile.in
+++ b/icu4c/source/tools/tzcode/Makefile.in
@@ -1,3 +1,5 @@
+# Copyright (C) 2016 and later: Unicode, Inc. and others.
+# License & terms of use: http://www.unicode.org/copyright.html
 # Some Portions Copyright (c) 2006-2012 IBM and others. All Rights Reserved.
 
 srcdir = @srcdir@
@@ -72,11 +74,15 @@ tzorig:	$(TZCODE) $(TZDATA)
 	cp $(srcdir)/zdump.c $(TZORIG)/zdump.c
 	-mv $(TZORIG)/factory $(TZORIG)/factory.orig
 	cat $(TZORIG)/factory.orig $(srcdir)/icuzones > $(TZORIG)/factory
+	-mv $(TZORIG)/zishrink.awk $(TZORIG)/zishrink.awk.orig
+	sed -e '/if (line ~ \/^R SystemV \/) return/s/^/#/' $(TZORIG)/zishrink.awk.orig > $(TZORIG)/zishrink.awk
+	-mv $(TZORIG)/Makefile $(TZORIG)/Makefile.orig
+	sed -e "s/^BACKWARD=.*/BACKWARD= backward pacificnew/" $(TZORIG)/Makefile.orig > $(TZORIG)/Makefile
 	$(MAKE) -C $@ $(TZORIG_OPTS) zdump zones
 
 $(ZDUMPOUT): tzorig
 	( cd $(TZORIG) ; ./zdump$(EXEEXT) $(ZDUMP_OPTS) )
-
+	find $(ZDUMPOUT) -name '*--ICU' -exec sh -c 'mv "$${0}" $${0%--ICU}' {} \;
 
 dump-out: $(ZDUMPOUT) $(ICUZDUMPOUT)
 
@@ -119,7 +125,7 @@ $(ZICTARG):		$(OBJECTS) $(TDATA) yearistype $(srcdir)/tz2icu.h
 		$(CC) $(CFLAGS) $(TZORIG_EXTRA_CFLAGS) $(LFLAGS) -I$(srcdir) $(OBJECTS) $(LDLIBS) -o $@
 
 $(TZ2ICUTARG):	$(srcdir)/tz2icu.cpp $(srcdir)/tz2icu.h
-		$(CXX) -W -Wall  -I$(srcdir) -I$(top_srcdir)/common -pedantic $(srcdir)/tz2icu.cpp -o $@
+		$(CXX) $(CXXFLAGS) -I$(srcdir) -I$(top_srcdir)/common $(srcdir)/tz2icu.cpp -o $@
 
 $(ICUZDUMPTARG):	$(srcdir)/icuzdump.cpp
 		$(LINK.cc)  -I$(srcdir) -I$(top_srcdir)/common -I$(top_srcdir)/i18n -I$(top_srcdir)/tools/toolutil -I$(top_srcdir)/io  -pedantic $(srcdir)/icuzdump.cpp $(LIBICUUC) $(LIBICUDT) $(LIBICUI18N) $(LIBICUIO) $(LIBICUTOOLUTIL) -o $@
diff --git a/icu4c/source/tools/tzcode/icuzdump.cpp b/icu4c/source/tools/tzcode/icuzdump.cpp
index 810dd7c..71551ed 100644
--- a/icu4c/source/tools/tzcode/icuzdump.cpp
+++ b/icu4c/source/tools/tzcode/icuzdump.cpp
@@ -1,12 +1,14 @@
+// © 2016 and later: Unicode, Inc. and others.
+// License & terms of use: http://www.unicode.org/copyright.html
 /*
 *******************************************************************************
 *
-*   Copyright (C) 2007-2014, International Business Machines
+*   Copyright (C) 2007-2016, International Business Machines
 *   Corporation and others.  All Rights Reserved.
 *
 *******************************************************************************
 *   file name:  icuzdump.cpp
-*   encoding:   US-ASCII
+*   encoding:   UTF-8
 *   tab size:   8 (not used)
 *   indentation:4
 *
@@ -34,9 +36,11 @@
 #include "unicode/ustream.h"
 #include "unicode/putil.h"
 
+#include "cmemory.h"
 #include "uoptions.h"
 
 using namespace std;
+using namespace icu;
 
 class DumpFormatter {
 public:
@@ -289,7 +293,7 @@ main(int argc, char *argv[]) {
     const char *linesep = NULL;
 
     U_MAIN_INIT_ARGS(argc, argv);
-    argc = u_parseArgs(argc, argv, sizeof(options)/sizeof(options[0]), options);
+    argc = u_parseArgs(argc, argv, UPRV_LENGTHOF(options), options);
 
     if (argc < 0) {
         cerr << "Illegal command line argument(s)" << endl << endl;
diff --git a/icu4c/source/tools/tzcode/icuzdump.vcxproj b/icu4c/source/tools/tzcode/icuzdump.vcxproj
index b21fca0..15c9432 100644
--- a/icu4c/source/tools/tzcode/icuzdump.vcxproj
+++ b/icu4c/source/tools/tzcode/icuzdump.vcxproj
@@ -1,5 +1,5 @@
 ﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
   <ItemGroup Label="ProjectConfigurations">
     <ProjectConfiguration Include="Debug|Win32">
       <Configuration>Debug</Configuration>
@@ -12,6 +12,7 @@
   </ItemGroup>
   <PropertyGroup Label="Globals">
     <ProjectGuid>{655F4481-B461-4DF0-AF10-0D01114A26C1}</ProjectGuid>
+    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
     <RootNamespace>icuzdump</RootNamespace>
     <Keyword>Win32Proj</Keyword>
   </PropertyGroup>
@@ -108,4 +109,4 @@
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
   <ImportGroup Label="ExtensionTargets">
   </ImportGroup>
-</Project>
\ No newline at end of file
+</Project>
diff --git a/icu4c/source/tools/tzcode/readme.txt b/icu4c/source/tools/tzcode/readme.txt
index 49d3336..5ec8bb3 100644
--- a/icu4c/source/tools/tzcode/readme.txt
+++ b/icu4c/source/tools/tzcode/readme.txt
@@ -1,3 +1,5 @@
+* Copyright (C) 2016 and later: Unicode, Inc. and others.
+* License & terms of use: http://www.unicode.org/copyright.html
 **********************************************************************
 * Copyright (c) 2003-2014, International Business Machines
 * Corporation and others.  All Rights Reserved.
diff --git a/icu4c/source/tools/tzcode/tz2icu.cpp b/icu4c/source/tools/tzcode/tz2icu.cpp
index aeae589..b946ffb 100644
--- a/icu4c/source/tools/tzcode/tz2icu.cpp
+++ b/icu4c/source/tools/tzcode/tz2icu.cpp
@@ -1,4 +1,5 @@
-
+// © 2016 and later: Unicode, Inc. and others.
+// License & terms of use: http://www.unicode.org/copyright.html
 /*
 **********************************************************************
 * Copyright (c) 2003-2014, International Business Machines
@@ -829,7 +830,7 @@ struct FinalRulePart {
         if (mode != DOM && (dow < 0 || dow >= 7)) {
             os << "Invalid input day of week " << dow;
         }
-        if (offset < 0 || offset > (2 * HOUR)) {
+        if (offset < (-1 * HOUR) || offset > (2 * HOUR)) {
             os << "Invalid input offset " << offset;
         }
         if (isgmt && !isstd) {
@@ -902,7 +903,6 @@ map<string,FinalRule> finalRules;
 
 map<string, set<string> > links;
 map<string, string> reverseLinks;
-map<string, string> linkSource; // id => "Olson link" or "ICU alias"
 
 /**
  * Predicate used to find FinalRule objects that do not have both
@@ -974,9 +974,6 @@ void readFinalZonesAndRules(istream& in) {
 
             links[fromid].insert(toid);
             reverseLinks[toid] = fromid;
-
-            linkSource[fromid] = "Olson link";
-            linkSource[toid] = "Olson link";
         } else if (token.length() > 0 && token[0] == '#') {
             consumeLine(in);
         } else {
@@ -1429,6 +1426,9 @@ void FinalRule::print(ostream& os) const {
     os << part[whichpart].offset << endl;
 }
 
+#define ICU_ZONE_OVERRIDE_SUFFIX "--ICU"
+#define ICU_ZONE_OVERRIDE_SUFFIX_LEN 5
+
 int main(int argc, char *argv[]) {
     string rootpath, zonetab, version;
     bool validArgs = FALSE;
@@ -1492,6 +1492,82 @@ int main(int argc, char *argv[]) {
          << (ZONEINFO.begin())->first << ".."
          << (--ZONEINFO.end())->first << "]" << endl;
 
+    // Overrides TZ database zones with ICU custom zone definition.
+    // These ICU zone overrides are defined in icuzones, with suffix --ICU.
+    // If there is a matching TZ database zone, the zoneinfo is replaced
+    // with the ICU definition. Then, the zone ID with --ICU suffix
+    // will be deleted from the final list.
+    // For example, zoneinfo for Europe/Dublin imported from the TZ database
+    // will be replaced with the zone definition for Europe/Dublin--ICU
+    // in icuzones.
+
+    // Collect zone IDs to be modified with ICU definition.
+    vector<string> customZones;
+    for (ZoneMapIter i = ZONEINFO.begin(); i != ZONEINFO.end(); ++i) {
+        const string& id = i->first;
+        size_t idx = id.rfind(ICU_ZONE_OVERRIDE_SUFFIX);
+        if (idx != string::npos && idx == id.length() - ICU_ZONE_OVERRIDE_SUFFIX_LEN) {
+            cout << "ICU zone override: " << id << endl;
+            customZones.push_back(id.substr(0, idx));
+        }
+    }
+
+    //
+    // BEGIN ICU Custom ZoneInfo Override Handling
+    //
+
+    // Replace zoneinfo with ICU definition, then remove ICU zone ID with
+    // the special suffix.
+    for (vector<string>::iterator i = customZones.begin(); i != customZones.end(); i++) {
+        string& origId = *i;
+        string custId = origId + ICU_ZONE_OVERRIDE_SUFFIX;
+
+        map<string,ZoneInfo>::iterator origZi = ZONEINFO.find(origId);
+        map<string,ZoneInfo>::iterator custZi = ZONEINFO.find(custId);
+        if (origZi != ZONEINFO.end() && custZi != ZONEINFO.end()) {
+            // replace original zone info with custom override,
+            // then delete one custom ID
+            cout << "Replacing ZoneInfo " << origId << " with " << custId << endl;
+            origZi->second = custZi->second;
+            ZONEINFO.erase(custZi);
+        }
+
+        // Also replace final rule
+        map<string,FinalZone>::iterator origFz = finalZones.find(origId);
+        map<string,FinalZone>::iterator custFz = finalZones.find(custId);
+        if (origFz != finalZones.end() && custFz != finalZones.end()) {
+            // replace original final zone with custom override,
+            // then delete one for custom ID
+            cout << "Replacing FinalZone for " << origId << " with " << custId << endl;
+            origFz->second = custFz->second;
+            finalZones.erase(custFz);
+        }
+    }
+
+    // Also remove aliases for ICU custom zoneinfo overrides.
+    for (map<string,set<string>>::const_iterator i = links.begin(); i != links.end(); ) {
+        const string& id = i->first;
+        size_t idx = id.rfind(ICU_ZONE_OVERRIDE_SUFFIX);
+        if (idx != string::npos && idx == id.length() - ICU_ZONE_OVERRIDE_SUFFIX_LEN) {
+            const set<string>& aliases = i->second;
+            // Also remove all revserse links
+            for (set<string>::const_iterator j = aliases.begin(); j != aliases.end(); j++) {
+                const string& alias = *j;
+                cout << "Removing alias " << alias << endl;
+                reverseLinks.erase(alias);
+            }
+
+            links.erase(i++);
+        } else {
+            i++;
+        }
+    }
+
+
+    //
+    // END ICU Custom ZoneInfo Override Handling
+    //
+
     try {
         for_each(finalZones.begin(), finalZones.end(), mergeFinalZone);
     } catch (const exception& error) {
@@ -1509,7 +1585,7 @@ int main(int argc, char *argv[]) {
         const string& olson = i->first;
         const set<string>& aliases = i->second;
         if (ZONEINFO.find(olson) == ZONEINFO.end()) {
-            cerr << "Error: Invalid " << linkSource[olson] << " to non-existent \""
+            cerr << "Error: Invalid 'Link' to non-existent \""
                  << olson << "\"" << endl;
             return 1;
         }
@@ -1713,12 +1789,8 @@ int main(int argc, char *argv[]) {
     ofstream file(filename.c_str());
     if (file) {
         file << "//---------------------------------------------------------" << endl
-             << "// Copyright (C) 2003";
-        if (thisYear > 2003) {
-            file << "-" << thisYear;
-        }
-        file << ", International Business Machines" << endl
-             << "// Corporation and others.  All Rights Reserved." << endl
+             << "// Copyright (C) 2016 and later: Unicode, Inc. and others." << endl
+             << "// License & terms of use: http://www.unicode.org/copyright.html#License" << endl
              << "//---------------------------------------------------------" << endl
              << "// Build tool:  tz2icu" << endl
              << "// Build date:  " << asctime(now) /* << endl -- asctime emits CR */
diff --git a/icu4c/source/tools/tzcode/tz2icu.h b/icu4c/source/tools/tzcode/tz2icu.h
index 213608d..b88442f 100644
--- a/icu4c/source/tools/tzcode/tz2icu.h
+++ b/icu4c/source/tools/tzcode/tz2icu.h
@@ -1,3 +1,5 @@
+// © 2016 and later: Unicode, Inc. and others.
+// License & terms of use: http://www.unicode.org/copyright.html
 /*
 **********************************************************************
 * Copyright (c) 2003-2013, International Business Machines
diff --git a/icu4c/source/tools/tzcode/zdump.c b/icu4c/source/tools/tzcode/zdump.c
index c47c180..0a299ef 100644
--- a/icu4c/source/tools/tzcode/zdump.c
+++ b/icu4c/source/tools/tzcode/zdump.c
@@ -31,6 +31,7 @@
 
 #ifdef ICU
 #include "dirent.h"
+#include "sys/stat.h"
 #endif
 
 #ifndef isascii
@@ -428,7 +429,7 @@ main(int argc, char *argv[])
 		}
 		closedir(dp);
 	}
-#endif ICU
+#endif
 
 	if (vflag | Vflag) {
 		intmax_t	lo;
@@ -495,7 +496,6 @@ main(int argc, char *argv[])
 		int count;
 
 		count = getall(&namelist);
-
 		fakeargv = (char **) malloc((size_t) (argc + count) * sizeof *argv);
 		/*
 		if ((fakeargv = (char **) malloc((size_t) (argc + count) * sizeof *argv)) == NULL) {
@@ -1020,9 +1020,9 @@ static void dumptimeICU(FILE * fp, time_t t)
 	min = offset % 60;
 	hour = offset / 60;
 	
-	fprintf(fp, "%02d", hour);
-	fprintf(fp, "%02d", min);
-	fprintf(fp, "%02d", sec);
+	fprintf(fp, "%02ld", hour);
+	fprintf(fp, "%02ld", min);
+	fprintf(fp, "%02ld", sec);
 	fprintf(fp, "[DST=%d]", loc.tm_isdst);
 }
 
-- 
2.7.4

