From f0391aad50e0133905887ed1f741b9985815efaa Mon Sep 17 00:00:00 2001
From: Jerome Jiang <jianj@google.com>
Date: Mon, 26 Mar 2018 17:48:24 -0700
Subject: [PATCH] DO NOT MERGE | libvpx: cherry pick fix to OOB of mv_cost
 index.

Bug: b/72510002
Test: poc provided in the bug.
Change-Id: I011763cd35b3bac1621e19e4447c442a39d66011
(cherry picked from commit 073990fb32f39c64e4ba9cbd5fb11bfc0c1f0aad)
CVE-2018-9349
---
 libvpx/vp8/encoder/mcomp.c | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

diff --git a/libvpx/vp8/encoder/mcomp.c b/libvpx/vp8/encoder/mcomp.c
index 768c764..9d880c4 100644
--- a/libvpx/vp8/encoder/mcomp.c
+++ b/libvpx/vp8/encoder/mcomp.c
@@ -36,16 +36,24 @@ int vp8_mv_bit_cost(int_mv *mv, int_mv *ref, int *mvcost[2], int Weight)
      * NEAREST for subsequent blocks. The "Weight" parameter allows, to a
      * limited extent, for some account to be taken of these factors.
      */
-    return ((mvcost[0][(mv->as_mv.row - ref->as_mv.row) >> 1] + mvcost[1][(mv->as_mv.col - ref->as_mv.col) >> 1]) * Weight) >> 7;
+     const int mv_idx_row =
+         clamp((mv->as_mv.row - ref->as_mv.row) >> 1, 0, MVvals);
+     const int mv_idx_col =
+         clamp((mv->as_mv.col - ref->as_mv.col) >> 1, 0, MVvals);
+     return ((mvcost[0][mv_idx_row] + mvcost[1][mv_idx_col]) * Weight) >> 7;
 }
 
 static int mv_err_cost(int_mv *mv, int_mv *ref, int *mvcost[2], int error_per_bit)
 {
     /* Ignore mv costing if mvcost is NULL */
-    if (mvcost)
-        return ((mvcost[0][(mv->as_mv.row - ref->as_mv.row) >> 1] +
-                 mvcost[1][(mv->as_mv.col - ref->as_mv.col) >> 1])
-                 * error_per_bit + 128) >> 8;
+    if (mvcost) {
+        const int mv_idx_row =
+            clamp((mv->as_mv.row - ref->as_mv.row) >> 1, 0, MVvals);
+        const int mv_idx_col =
+            clamp((mv->as_mv.col - ref->as_mv.col) >> 1, 0, MVvals);
+        return ((mvcost[0][mv_idx_row] + mvcost[1][mv_idx_col]) * error_per_bit +
+                 128) >> 8;
+    }
     return 0;
 }
 
-- 
2.7.4

