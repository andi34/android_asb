From 53afaf450ad9ef173088a1cf6279743156077374 Mon Sep 17 00:00:00 2001
From: Narayan Kamath <narayan@google.com>
Date: Tue, 9 Aug 2016 17:00:25 +0100
Subject: [PATCH 22/46] Process: Fix communication with zygote.

Don't write partial requests, and don't return (or throw) early after
partially reading a response.

bug: 30143607

(cherry-picked from commit 448be0a62209c977593d81617853a8a428d013df)

Change-Id: I5881fdd5e81023cd21fb4d23a471a5031987a1f1
(cherry picked from commit 8e69dd2284580bd0587363fe5279c1b6539e3b89)
---
 core/java/android/os/Process.java | 20 ++++++++++++++------
 1 file changed, 14 insertions(+), 6 deletions(-)

diff --git a/core/java/android/os/Process.java b/core/java/android/os/Process.java
index cf9ddb3..45800a7 100644
--- a/core/java/android/os/Process.java
+++ b/core/java/android/os/Process.java
@@ -495,6 +495,15 @@ public class Process {
         openZygoteSocketIfNeeded();
 
         try {
+            // Throw early if any of the arguments are malformed. This means we can
+            // avoid writing a partial response to the zygote.
+            int sz = args.size();
+            for (int i = 0; i < sz; i++) {
+                if (args.get(i).indexOf('\n') >= 0) {
+                    throw new ZygoteStartFailedEx("embedded newlines not allowed");
+                }
+            }
+
             /**
              * See com.android.internal.os.ZygoteInit.readArgumentList()
              * Presently the wire format to the zygote process is:
@@ -509,13 +518,8 @@ public class Process {
             sZygoteWriter.write(Integer.toString(args.size()));
             sZygoteWriter.newLine();
 
-            int sz = args.size();
             for (int i = 0; i < sz; i++) {
                 String arg = args.get(i);
-                if (arg.indexOf('\n') >= 0) {
-                    throw new ZygoteStartFailedEx(
-                            "embedded newlines not allowed");
-                }
                 sZygoteWriter.write(arg);
                 sZygoteWriter.newLine();
             }
@@ -524,11 +528,15 @@ public class Process {
 
             // Should there be a timeout on this?
             ProcessStartResult result = new ProcessStartResult();
+            // Always read the entire result from the input stream to avoid leaving
+            // bytes in the stream for future process starts to accidentally stumble
+            // upon.
             result.pid = sZygoteInputStream.readInt();
+            result.usingWrapper = sZygoteInputStream.readBoolean();
+
             if (result.pid < 0) {
                 throw new ZygoteStartFailedEx("fork() failed");
             }
-            result.usingWrapper = sZygoteInputStream.readBoolean();
             return result;
         } catch (IOException ex) {
             try {
-- 
2.7.4

