From a8214b57cd50d98d031f86f8e31ed673ddda0548 Mon Sep 17 00:00:00 2001
From: Tom O'Neill <tomo@google.com>
Date: Thu, 22 Dec 2016 17:59:47 +0000
Subject: [PATCH 34/46] Fix exploit where can hide the fact that a location was
 mocked am: a206a0f17e am: d417e54872 am: 3380a77516 am: 0a8978f04b am:
 1684e5f344 am: d28eef0cc2 am: 1f458fdc66 am: d82f8a67fc am: 1ac8affd51 am:
 56098f81b6 am: 7cec76de0f am: 2da05d0f9e

Change-Id: I8c94a06f5fa722312436484609bafcb0585d6d18
---
 .../java/com/android/server/LocationManagerService.java | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/services/java/com/android/server/LocationManagerService.java b/services/java/com/android/server/LocationManagerService.java
index eebd1c5..b4f0919 100644
--- a/services/java/com/android/server/LocationManagerService.java
+++ b/services/java/com/android/server/LocationManagerService.java
@@ -57,6 +57,8 @@ import android.os.SystemClock;
 import android.os.UserHandle;
 import android.os.WorkSource;
 import android.provider.Settings;
+import android.text.TextUtils;
+import android.util.EventLog;
 import android.util.Log;
 import android.util.Slog;
 import com.android.internal.content.PackageMonitor;
@@ -2247,9 +2249,22 @@ public class LocationManagerService extends ILocationManager.Stub {
             if (mockProvider == null) {
                 throw new IllegalArgumentException("Provider \"" + provider + "\" unknown");
             }
+
+             // Ensure that the location is marked as being mock. There's some logic to do this in
+             // handleLocationChanged(), but it fails if loc has the wrong provider (bug 33091107).
+             Location mock = new Location(loc);
+             mock.setIsFromMockProvider(true);
+
+             if (!TextUtils.isEmpty(loc.getProvider()) && !provider.equals(loc.getProvider())) {
+                 // The location has an explicit provider that is different from the mock provider
+                 // name. The caller may be trying to fool us via bug 33091107.
+                 EventLog.writeEvent(0x534e4554, "33091107", Binder.getCallingUid(),
+                        provider + "!=" + loc.getProvider());
+             }
+
             // clear calling identity so INSTALL_LOCATION_PROVIDER permission is not required
             long identity = Binder.clearCallingIdentity();
-            mockProvider.setLocation(loc);
+            mockProvider.setLocation(mock);
             Binder.restoreCallingIdentity(identity);
         }
     }
-- 
2.7.4

