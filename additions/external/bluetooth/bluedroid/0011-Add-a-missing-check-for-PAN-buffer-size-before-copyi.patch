From 6aebac2ac15373a66fca13dd880fc9c1fd3038c2 Mon Sep 17 00:00:00 2001
From: Pavlin Radoslavov <pavlin@google.com>
Date: Fri, 7 Jul 2017 01:58:00 +0200
Subject: [PATCH 11/15] Add a missing check for PAN buffer size before copying
 data

Bug: 63146237
Test: External script
Change-Id: I3e9c8a767a8a2a80ff56ccb48c56ca0d4b8c3402
Merged-In: I3e9c8a767a8a2a80ff56ccb48c56ca0d4b8c3402
(cherry picked from commit 1d909399cb4259243dac2e531e3ce6ca1afa77e7)
CVE-2017-0782
---
 bta/pan/bta_pan_act.c | 9 +++++++++
 include/bt_target.h   | 4 ++++
 2 files changed, 13 insertions(+)

diff --git a/bta/pan/bta_pan_act.c b/bta/pan/bta_pan_act.c
index b29920f..4b4ff20 100644
--- a/bta/pan/bta_pan_act.c
+++ b/bta/pan/bta_pan_act.c
@@ -26,6 +26,7 @@
 
 #if defined(PAN_INCLUDED) && (PAN_INCLUDED == TRUE)
 
+#include <cutils/log.h>
 #include "bta_api.h"
 #include "bta_sys.h"
 #include "bd.h"
@@ -173,6 +174,14 @@ static void bta_pan_data_buf_ind_cback(UINT16 handle, BD_ADDR src, BD_ADDR dst,
     if ( sizeof(tBTA_PAN_DATA_PARAMS) > p_buf->offset )
     {
         /* offset smaller than data structure in front of actual data */
+        if (sizeof(BT_HDR) + sizeof(tBTA_PAN_DATA_PARAMS) + p_buf->len >
+            PAN_BUF_SIZE) {
+          android_errorWriteLog(0x534e4554, "63146237");
+          APPL_TRACE_ERROR2("%s: received buffer length too large: %d", __func__,
+                           p_buf->len);
+          GKI_freebuf(p_buf);
+          return;
+        }
         p_new_buf = (BT_HDR *)GKI_getpoolbuf( PAN_POOL_ID );
         if(!p_new_buf)
         {
diff --git a/include/bt_target.h b/include/bt_target.h
index c70290c..6fd2fcb 100644
--- a/include/bt_target.h
+++ b/include/bt_target.h
@@ -633,6 +633,10 @@
 #define AVDT_DATA_POOL_SIZE         GKI_BUF3_SIZE
 #endif
 
+#ifndef PAN_BUF_SIZE
+#define PAN_BUF_SIZE                GKI_BUF3_SIZE
+#endif
+
 #ifndef PAN_POOL_ID
 #define PAN_POOL_ID                 GKI_POOL_ID_3
 #endif
-- 
2.7.4

